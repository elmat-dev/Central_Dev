#ifndef __ECHO_H__
#define __ECHO_H__

/*
 ******************************************************************************
 * @file    udp_echoserver.h
 * @author  Elmat Team
 * @version V0.1b
 * @date    31-October-2014
 * @brief   Header file for UDP echo server application
 ******************************************************************************
 */



/* If remote device will not send new packet, after [DEVICE_AGING_INTERVAL] period of time [given in ms] */
/* data collected earlier from that particular device won't be printed to DATA UART  */
#define DEVICE_AGING_INTERVAL	25000


#include <string.h>
#include "main.h"
#include "pbuf.h"
#include "udp.h"
#include "tcp.h"
#include "sfp.h"


/**
  * @brief This function is called when an UDP datagrm has been received on the port UDP_PORT.
  * @param arg user supplied argument (udp_pcb.recv_arg)
  * @param pcb the udp_pcb which received data
  * @param p the packet buffer that was received
  * @param addr the remote IP address from which the packet was received
  * @param port the remote port from which the packet was received
  * @retval None
  * This function parses data received from remote device and saves it to the global array of 10 elements of Remote_Data_t type
  * Remote_Data_t is defined in main.h as extern, so it has global scope on files which includes main.h file
  * The payload contains the data which was generated by remote device
  */
void udp_echoserver_receive_callback(void *arg, struct udp_pcb *upcb, struct pbuf *p, struct ip_addr *addr, u16_t port);


/**
  * @brief This function is used to initialize UDP Server application.
  * @param None
  * @retval None
  */
void UDP_Server_Init(void);


/**
  * @brief This function is called when timeout from occur. It is used to print data collected from remote devices.
  * @param None
  * @retval None
  * Currently printed information from remote devices include:
  * 	ID of remote device
  *
  * 	TX Power of SFP module [in dBm units]
  *
  * 	RX Power of SFP module [in dBm units]
  *
  * 	Temperature of SFP module [in Celsjus degree]
  *
  * 	Li-Ion Battery Voltage [in V units]
  *
  * 	Temperature from Si7021 sensor (if available) [in Celsjus degree]. If sensor is not detected -500.0 is printed
  *
  * 	Humidity from Si4021 sensor (if available) . If sensor is not detected -500.0 is printed
  *
  * 	GPS position - Latitude. If position is not acquired, then -500.0 is printed
  *
  * 	GPS position - Longitude. If position is not acquired, then -500.0 is printed.
  *
  * 	Laser status (1 - if power over fiber is received, 0 - if power is not received via fiber, could mean the cable is broken)
  *
  * 	Optical power received via Power Over Fiber. This is printed only if INA219 is used for power monitoring on remote device.
  * 	Reported value is an estimated one, with low accuracy. If sensor is not available, then -500.0 is printed
  */
void print_results(void);



/**
  * @brief This function is used to convert four consecutive uint8_t values to single float.
  * @param pointer to memory start location from where four uint8_t values will be read
  * @retval float value
  * Warning: this may not work on some platforms or compilers. Programmer should take caution when using this function
  */
float byteArray2Float (uint8_t * );

#endif /* __MINIMAL_ECHO_H */
